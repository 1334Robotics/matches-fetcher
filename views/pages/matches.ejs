<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Team <%= formattedTeamKey %> Matches</title>
  <%- include('../partials/styles') %>
  <style>
    .main-container {
      display: flex;
      flex-direction: row;
      gap: 20px;
      margin-top: 25px; /* Add space between header and content */
    }
    
    .matches-column {
      flex: 1;
      min-width: 0;
    }
    
    .info-column {
      width: 350px;
      position: sticky;
      top: 15px;
      align-self: flex-start;
    }
    
    .team-ranking-section, .next-match-card, .clock-section {
      background-color: #1d1d1d;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.2);
    }
    
    .info-title {
      font-size: 1.1em;
      font-weight: bold;
      color: #4fc3f7;
      margin-bottom: 10px;
      border-bottom: 1px solid #333;
      padding-bottom: 5px;
    }
    
    .ranking-stats {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 10px;
    }
    
    .stat-card {
      background-color: #252525;
      padding: 12px;
      border-radius: 6px;
      text-align: center;
    }
    
    .stat-value {
      font-size: 1.6em;
      font-weight: bold;
      margin-bottom: 5px;
      color: #e0e0e0;
    }
    
    .stat-label {
      font-size: 0.9em;
      color: #aaa;
    }
    
    .next-match-details {
      background-color: #252525;
      padding: 12px;
      border-radius: 6px;
      margin-top: 10px;
    }
    
    .next-match-time {
      font-size: 1.4em;
      font-weight: bold;
      margin-bottom: 8px;
      color: #ff9800;
      text-align: center;
    }
    
    .next-match-number {
      font-size: 1.2em;
      margin-bottom: 8px;
      text-align: center;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 8px;
    }
    
    .match-number-badge {
      background-color: #333;
      color: #fff;
      padding: 4px 8px;
      border-radius: 4px;
      font-weight: bold;
    }
    
    .alliance-indicator {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 5px;
      margin-bottom: 8px;
      font-weight: bold;
      font-size: 1.1em;
    }
    
    .alliance-indicator.red {
      color: #f44336;
    }
    
    .alliance-indicator.blue {
      color: #2196f3;
    }
    
    .alliance-dot {
      width: 12px;
      height: 12px;
      border-radius: 50%;
    }
    
    .clock-display {
      font-size: 1.8em;
      font-weight: bold;
      text-align: center;
      margin: 10px 0;
      color: #e0e0e0;
    }
    
    .clock-date {
      text-align: center;
      color: #aaa;
      font-size: 0.9em;
    }
    
    .next-match-teams {
      margin-top: 10px;
      background-color: #2d2d2d;
      border-radius: 4px;
      padding: 10px;
    }

    .teams-section {
      margin-bottom: 10px;
    }

    .teams-section:last-child {
      margin-bottom: 0;
    }

    .teams-title {
      font-size: 0.9em;
      font-weight: bold;
      margin-bottom: 5px;
      display: flex;
      align-items: center;
    }

    .red-title {
      color: #f44336;
    }

    .blue-title {
      color: #2196f3;
    }

    .teams-list {
      display: flex;
      flex-direction: column;
      gap: 4px;
      margin-left: 5px;
    }

    .team-item {
      font-size: 0.9em;
      padding: 2px 5px;
      background-color: #3d3d3d;
      border-radius: 3px;
    }

    .team-item.highlight {
      text-decoration: underline;
      font-weight: bold;
    }
    
    .team-item.highlight.red-highlight {
      border-left: 3px solid #f44336;
      background-color: #3f2424;
    }
    
    .team-item.highlight.blue-highlight {
      border-left: 3px solid #2196f3;
      background-color: #1a2a3a;
    }
    
    /* Add this to styles.ejs for match cards */
    .team-chip.highlight.red-team {
      background-color: #3f2424;
      font-weight: bold;
      border-width: 3px;
    }
    
    .team-chip.highlight.blue-team {
      background-color: #1a2a3a;
      font-weight: bold;
      border-width: 3px;
    }
    
    @media (max-width: 768px) {
      .main-container {
        flex-direction: column;
      }
      .info-column {
        width: 100%;
        position: static;
      }
    }

    @keyframes blink-background {
      0% { background-color: #252525; }
      50% { background-color: #4a2917; }
      100% { background-color: #252525; }
    }

    .next-match-details.queuing {
      animation: blink-background 1.5s infinite;
      border: 2px solid #ff9800;
    }
  </style>
</head>
<body>
  <div class="container">
    <%- include('../partials/header', { formattedTeamKey, eventKey, nowQueuing }) %>
    
    <% if (typeof errorMessage !== 'undefined' && errorMessage) { %>
    <div class="error-message" style="background-color: #f44336; color: white; padding: 12px; margin: 15px 0; border-radius: 4px; text-align: center;">
      <strong>Error:</strong> <%= errorMessage %>
    </div>
    <% } %>
    
    <div class="main-container">
      <!-- LEFT COLUMN: Match listings -->
      <div class="matches-column">
        <div class="content">
          <% if (Object.keys(matchGroups).length === 0 && completedMatches.length === 0) { %>
            <div class="no-matches">
              <p>No matches found for team <%= formattedTeamKey %></p>
            </div>
          <% } else { %>
            <!-- Active/Upcoming Matches -->
            <% Object.keys(matchGroups).forEach(groupType => { %>
              <%- include('../partials/matchGroup', { 
                groupType, 
                matches: matchGroups[groupType], 
                formattedTeamKey,
                isCompletedGroup: false,
                isEmbedded: false
              }) %>
            <% }); %>
            
            <!-- Completed Matches -->
            <% if (completedMatches.length > 0) { %>
              <%- include('../partials/matchGroup', { 
                groupType: 'Completed', 
                matches: completedMatches, 
                formattedTeamKey,
                isCompletedGroup: true,
                isEmbedded: false
              }) %>
            <% } %>
          <% } %>
        </div>
      </div>
      
      <!-- RIGHT COLUMN: Team info, next match, and clock -->
      <div class="info-column">
        <!-- Team Ranking Section -->
        <% if (teamRanking) { %>
        <div class="team-ranking-section">
          <div class="info-title">Team <%= formattedTeamKey %> Ranking</div>
          <div class="ranking-stats">
            <div class="stat-card">
              <div class="stat-value">#<%= teamRanking.rank %></div>
              <div class="stat-label">Rank</div>
            </div>
            <div class="stat-card">
              <div class="stat-value"><%= teamRanking.record %></div>
              <div class="stat-label">Record (W-L-T)</div>
            </div>
            <div class="stat-card">
              <div class="stat-value"><%= teamRanking.matchesPlayed || "N/A" %></div>
              <div class="stat-label">Matches Played</div>
            </div>
            <div class="stat-card">
              <div class="stat-value"><%= teamRanking.matches %></div>
              <div class="stat-label">Total Teams</div>
            </div>
          </div>
        </div>
        <% } %>
        
        <!-- Next Match Section -->
        <% 
          let nextMatch = null;
          let nextMatchAlliance = null;
          
          // Find the next match
          if (Object.keys(matchGroups).length > 0) {
            for (const groupType in matchGroups) {
              if (matchGroups[groupType].length > 0) {
                nextMatch = matchGroups[groupType][0];
                nextMatchAlliance = nextMatch.redTeams.includes(formattedTeamKey) ? 'red' : 'blue';
                break;
              }
            }
          }
        %>
        
        <div class="next-match-card">
          <div class="info-title">Next Match</div>
          <div class="next-match-details <%= nextMatch && nextMatch.status === 'Now queuing' ? 'queuing' : '' %>">
            <% if (nextMatch) { %>
              <div class="next-match-number">
                <span><%= nextMatch.label %></span>
              </div>
              <div class="next-match-time">
                <% 
                  let timeDisplay = "TBD";
                  if (nextMatch.times.scheduledStartTime) {
                    const matchDate = new Date(nextMatch.times.scheduledStartTime);
                    timeDisplay = matchDate.toLocaleTimeString('en-US', {
                      hour: 'numeric',
                      minute: '2-digit',
                      hour12: true,
                      timeZone: 'Canada/Eastern'
                    });
                  }
                %>
                <%= timeDisplay %>
              </div>
              <div class="alliance-indicator <%= nextMatchAlliance %>">
                <div class="alliance-dot <%= nextMatchAlliance %>-alliance"></div>
                <%= nextMatchAlliance.charAt(0).toUpperCase() + nextMatchAlliance.slice(1) %> Alliance
              </div>
              
              <!-- Teams in the match -->
              <div class="next-match-teams">
                <div class="teams-section">
                  <div class="teams-title red-title">Red Alliance</div>
                  <div class="teams-list">
                    <% nextMatch.redTeams.forEach(team => { %>
                      <div class="team-item <%= team === formattedTeamKey ? 'highlight red-highlight' : '' %>">
                        Team <%= team %>
                      </div>
                    <% }); %>
                  </div>
                </div>
                
                <div class="teams-section">
                  <div class="teams-title blue-title">Blue Alliance</div>
                  <div class="teams-list">
                    <% nextMatch.blueTeams.forEach(team => { %>
                      <div class="team-item <%= team === formattedTeamKey ? 'highlight blue-highlight' : '' %>">
                        Team <%= team %>
                      </div>
                    <% }); %>
                  </div>
                </div>
              </div>
              
              <div class="match-status <%= nextMatch.status === 'Now queuing' ? 'status-queuing' : nextMatch.status === 'On deck' ? 'status-on-deck' : nextMatch.status === 'On field' ? 'status-on-field' : 'status-default' %>" style="text-align: center; margin-top: 5px;">
                <%= nextMatch.status %>
              </div>
            <% } else { %>
              <div style="text-align: center; padding: 20px 0; color: #aaa; font-size: 1.2em;">
                N/A
              </div>
              <div style="text-align: center; color: #888; font-size: 0.9em;">
                No upcoming matches
              </div>
            <% } %>
          </div>
        </div>
        
        <!-- Clock Section -->
        <div class="clock-section">
          <div class="info-title">Current Time</div>
          <div class="clock-display" id="clock-time"></div>
          <div class="clock-date" id="clock-date"></div>
        </div>
      </div>
    </div>
    
    <%- include('../partials/footer', { eventKey }) %>
  </div>
  
  <%- include('../partials/scripts', { eventKey }) %>
  
  <script>
    // Add clock functionality
    function updateClock() {
      const now = new Date();
      
      // Update time
      document.getElementById('clock-time').textContent = now.toLocaleTimeString('en-US', {
        hour: 'numeric',
        minute: '2-digit',
        second: '2-digit',
        hour12: true
      });
      
      // Update date
      document.getElementById('clock-date').textContent = now.toLocaleDateString('en-US', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
      
      setTimeout(updateClock, 1000);
    }
    
    document.addEventListener('DOMContentLoaded', function() {
      updateClock();
    });
  </script>
</body>
</html>